# 🪨📄✂️ Rock-Paper-Scissors AI Project

![Python](https://img.shields.io/badge/Python-3.8+-blue?logo=python&logoColor=white)
![Web](https://img.shields.io/badge/Web-Ready-green?logo=html5&logoColor=white)
![Status](https://img.shields.io/badge/Status-Complete-brightgreen?style=flat&logo=checkmarx)
![License](https://img.shields.io/badge/License-MIT-yellow.svg)
![Game](https://img.shields.io/badge/Game-Rock--Paper--Scissors-red?style=flat)

A sophisticated Rock-Paper-Scissors implementation featuring an **adaptive AI opponent** with pattern recognition capabilities. This project includes both a Python backend and a beautiful web interface for an immersive gaming experience.

---

## ✨ Features

- ** Adaptive AI**: Uses Markov chain prediction and special-case detection to learn your play style
- ** Two Game Modes**: 
  - Tournament Mode: Your AI battles 4 unique opponent bots over 1000 rounds
  - Human vs AI Mode: Play directly against the intelligent AI
- ** Web Interface**: Beautiful, responsive UI with hand gesture icons (✊, 🖐, ✌️)
- ** Real-time Analytics**: Track scores, win ratios, and game history
- ** Modern Design**: Clean white background with gradient accents and smooth animations

---

## 🗂 Project Structure

```
rock-paper-scissors/
│
├── RPS.py                 # Your adaptive AI bot implementation
├── RPS_game.py           # Game engine + opponent bots
├── rps-game.html         # Complete web interface (standalone)
├── README.md             # Project documentation
│
├── (Optional separated files):
│   ├── style.css         # Styles for the web interface
│   └── script.js         # JavaScript game logic
```

---

##  How to Run

### Option 1: Web Version (Recommended)
1. Save the provided code as `rps-game.html`
2. Open in VS Code
3. Install the "Live Server" extension if not already installed
4. Right-click on the file and select "Open with Live Server"
5. Your browser will open with the beautiful game interface

### Option 2: Python Version
```bash
# Run the original Python version
python main.py
```

You'll be presented with a menu:
- Enter `1` → Tournament Mode (AI vs 4 bots)
- Enter `2` → Human vs AI Mode (Terminal-based)

---

## 🧠 AI Strategy

Your adaptive AI uses a multi-layered approach:

1. **Data Gathering**: Starts with fixed moves to collect opponent data
2. **Special Case Detection**: Identifies if opponent is "Kris" (counters your last move)
3. **Markov Chain Prediction**: Models opponent patterns based on previous moves
4. **Fallback Strategy**: Cycles through moves when no patterns are detected

---

##  Opponent Bots

The AI faces off against four unique opponents:

1. **Quincy**: Cycles through a fixed pattern [R, P, S, R, P]
2. **Abbey**: Predicts based on your second-to-last move
3. **Kris**: Random selection with a skewed distribution
4. **Mrugesh**: Plays your most common move from the last 10 rounds

---

## 🎮 Web Interface Features

- **Responsive Design**: Works beautifully on desktop and mobile devices
- **Visual Feedback**: Color-coded results with emoji reactions
- **Game History**: Track all previous rounds with outcomes
- **Smooth Animations**: Engaging hover effects and transitions
- **Tournament Results**: Clear display of win ratios against each opponent

---

##  Technical Implementation

The web version includes:
- Pure HTML/CSS/JavaScript (no external dependencies)
- Gradient backgrounds and modern UI elements
- Flexbox and CSS Grid for responsive layout
- Interactive JavaScript game logic
- Local state management for game progress

---

##  Future Enhancements

- [ ] Multiplayer online mode (WebSockets)
- [ ] User authentication and leaderboards
- [ ] Advanced AI with neural network implementation
- [ ] Game statistics and visualization
- [ ] Customizable AI difficulty levels
- [ ] Tournament brackets and challenges

---

##  Author

**Srizoni Maity**  
B.Tech in Data Science | Passion for AI & Innovative Projects

- 🔗 GitHub: [https://github.com/srizoni-maity](https://github.com/srizoni-maity)
- 🔗 LinkedIn: [https://www.linkedin.com/in/srizoni-maity-012235356]

---

##  License

This project is licensed under the MIT License - see the LICENSE file for details.

---

## 🙏 Acknowledgments

- Icons from Font Awesome
- Color palette inspired by modern design trends
- Game concept based on classic Rock-Paper-Scissors with AI enhancements

